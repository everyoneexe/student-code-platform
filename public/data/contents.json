[
  {
    "id": 4,
    "title": "Arduino LED Yakma",
    "description": "Bir butona basınca LED yakmayı gösteren örnek devre.",
    "image": "/uploads/arduino-led.jpg",
    "category": "Arduino",
    "code": "// Arduino kodu\nint ledPin = 13;\nvoid setup() {\n  pinMode(ledPin, OUTPUT);\n}\nvoid loop() {\n  digitalWrite(ledPin, HIGH);\n  delay(500);\n  digitalWrite(ledPin, LOW);\n  delay(500);\n}"
  },
  {
    "id": 3,
    "title": "Python If Else Yapısı",
    "description": "Python'da koşullu yapıların temel örneği.",
    "image": "/uploads/python-if.jpg",
    "category": "Python",
    "code": "# Python kodu\nx = 5\nif x > 0:\n    print('Pozitif')\nelse:\n    print('Negatif veya sıfır')"
  },
    {
      "id": 1,
      "title": "Arduino LCD Nota Oyunu",
      "description": "LCD ekran, butonlar ve buzzer ile nota öğrenme oyunu.",
      "image": "/uploads/muzik.png",
      "category": "Arduino",
      "code": "#include <Wire.h>\n#include <LiquidCrystal_I2C.h>\n\n// LCD ekran tanımlama (adres: 0x27, boyut: 16x2)\nLiquidCrystal_I2C lcd(0x27, 16, 2); // Gerekirse 0x3F olabilir\n\n// Donanım pinleri\n#define BUZZER_PIN 9\n#define GREEN_LED 10\n#define RED_LED 11\n\n// 7 butonun bağlı olduğu pinler\nconst int buttonPins[7] = {2, 3, 4, 5, 6, 7, 8};\n\n// Nota frekansları (Do, Re, Mi, Fa, Sol, La, Si)\nconst int notesFreq[7] = {262, 294, 330, 349, 392, 440, 494};\n// Nota isimleri LCD'de göstermek için\nconst char* noteNames[7] = {\"Do\", \"Re\", \"Mi\", \"Fa\", \"Sol\", \"La\", \"Si\"};\n\n// Global değişkenler (mod takibi)\nint mode = -1;  // Seçilen mod (1, 2 veya 3)\nbool modeSelected = false; // Mod seçildi mi?\n\n#define MAX_MEL_SIZE 10 // Maksimum melodi uzunluğu\n\n// ----------- MOD 1: Dinle ve Çal için diziler -----------\n// Rastgele oluşturulacak 3 farklı dizi (4, 2 ve 3 notadan oluşacak)\nint mod1Sequences[3][MAX_MEL_SIZE];\nint mod1Lengths[3] = {4, 2, 3}; // Her dizinin kaç notadan oluştuğu\n\n// ----------- MOD 2: Gör ve Çal için diziler -----------\n// Önceden tanımlı iki dizi (3 ve 4 notadan oluşan)\nint mod2Sequences[2][MAX_MEL_SIZE] = {\n  {0, 2, 4},       // Do, Mi, Sol\n  {1, 3, 5, 6}     // Re, Fa, La, Si\n};\nint mod2Lengths[2] = {3, 4}; // Her dizinin uzunluğu\n\n// ----------- MOD 3: Şarkı Çal için diziler -----------\n// İki farklı şarkı (melodi), örnek: Happy Birthday başı ve başka bir melodi\nint song1[] = {0, 0, 4, 4, 5, 5, 4};\nint song1Len = 7;\nint song2[] = {4, 4, 5, 4, 3, 2, 0};\nint song2Len = 7;\n\n// Seçilen şarkıyı burada tutacağız\nint selectedSong[MAX_MEL_SIZE];\nint selectedSongLen = 0;\n\n// Kullanıcıdan alınan notalar (mod 3 için)\nint userInput[MAX_MEL_SIZE];\nint userInputIndex = 0;\n\nvoid setup() {\n  lcd.init(); // LCD başlatma\n  lcd.backlight(); // Arka ışığı aç\n\n  // Buton pinlerini giriş (INPUT_PULLUP) olarak ayarla\n  for (int i = 0; i < 7; i++) {\n    pinMode(buttonPins[i], INPUT_PULLUP);\n  }\n  pinMode(BUZZER_PIN, OUTPUT);\n  pinMode(GREEN_LED, OUTPUT);\n  pinMode(RED_LED, OUTPUT);\n\n  selectMode(); // Başlangıçta mod seçimi ekranı\n}\n\nvoid loop() {\n  // Mod henüz seçilmediyse seçim ekranına git\n  if (!modeSelected) {\n    selectMode();\n  } else {\n    // Seçilen moda göre ilgili fonksiyonu çağır\n    if (mode == 1) {\n      runMode1();\n    } else if (mode == 2) {\n      runMode2();\n    } else if (mode == 3) {\n      runMode3();\n    }\n  }\n}\n\n// ----------- MOD SEÇİMİ FONKSİYONU -----------\nvoid selectMode() {\n  static bool displayed = false;\n\n  // Sadece bir kez ekranı temizle ve mod seçimi göster\n  if (!displayed) {\n    lcd.clear();\n    lcd.setCursor(0, 0);\n    lcd.print(\"Mod seciniz:\");\n    lcd.setCursor(0, 1);\n    lcd.print(\"1 2 3\");\n    displayed = true;\n  }\n\n  // İlk 3 buton ile mod seçimi yapılır\n  for (int i = 0; i < 3; i++) {\n    if (digitalRead(buttonPins[i]) == LOW) {\n      mode = i + 1; // Mod numarası (1, 2 veya 3)\n      modeSelected = true;\n      lcd.clear();\n      lcd.setCursor(0, 0);\n      lcd.print(\"Mod \");\n      lcd.print(mode);\n      lcd.print(\" secildi\");\n      delay(1500);\n      lcd.clear();\n\n      // Her mod için hazırlık işlemleri\n      if (mode == 1) {\n        generateRandomSequencesForMod1(); // Mod 1 için rastgele dizi üret\n        showModeDescription(mode);        // Mod açıklamasını göster\n      } else if (mode == 2) {\n        showModeDescription(mode);        // Mod açıklamasını göster\n      } else if (mode == 3) {\n        selectSongForMode3();             // Mod 3 için şarkı seçtir\n      }\n      break; // Bir mod seçildiğinde döngüyü bitir\n    }\n  }\n}\n\n// Mod açıklaması LCD'ye yazılır\nvoid showModeDescription(int m) {\n  lcd.clear();\n  lcd.setCursor(0, 0);\n  switch (m) {\n    case 1:\n      lcd.print(\"1. Dinle ve Cal\");\n      break;\n    case 2:\n      lcd.print(\"2. Gor ve Cal\");\n      break;\n    case 3:\n      lcd.print(\"3. Sarki Cal\");\n      break;\n  }\n  delay(2000);\n  lcd.clear();\n}\n\n// ==================== MOD 1: DİNLE ve ÇAL ====================\n// Her defasında rastgele oluşturulan dizi önce çalınır, ardından kullanıcıdan aynısını çalması beklenir\n\nint currentSeqIndex = 0;   // Kaçıncı dizi oynatılıyor\nint userNoteIndex = 0;     // Kullanıcıdan gelen nota indeksi\nbool waitingUserInput = false; // Kullanıcıdan giriş bekleniyor mu?\n\n// 3 tane rastgele nota dizisi oluşturur (her biri farklı uzunlukta)\nvoid generateRandomSequencesForMod1() {\n  randomSeed(analogRead(A0)); // Rastgelelik için analog giriş kullanılır\n  for (int seq = 0; seq < 3; seq++) {\n    for (int i = 0; i < mod1Lengths[seq]; i++) {\n      mod1Sequences[seq][i] = random(0, 7);  // 0..6 arasında rastgele nota\n    }\n  }\n}\n\nvoid runMode1() {\n  // Henüz kullanıcıdan nota beklenmiyorsa, diziyi çal\n  if (!waitingUserInput) {\n    lcd.clear();\n    lcd.setCursor(0,0);\n    lcd.print(\"Dinle:\");\n    delay(500);\n    playSequence(mod1Sequences[currentSeqIndex], mod1Lengths[currentSeqIndex]); // Melodiyi çal\n    lcd.clear();\n    lcd.setCursor(0,0);\n    lcd.print(\"Cal:\");\n    waitingUserInput = true;\n    userNoteIndex = 0;\n  }\n\n  // Kullanıcıdan giriş bekleniyorsa, buton okuma\n  if (waitingUserInput) {\n    for (int i = 0; i < 7; i++) {\n      if (digitalRead(buttonPins[i]) == LOW) {\n        playNote(i); // Basılan notayı çal\n        delay(150);\n        // Doğru nota basıldıysa\n        if (i == mod1Sequences[currentSeqIndex][userNoteIndex]) {\n          digitalWrite(GREEN_LED, HIGH);\n          digitalWrite(RED_LED, LOW);\n          userNoteIndex++;\n          // Dizi tamamlandıysa bir sonraki diziyi başlat\n          if (userNoteIndex >= mod1Lengths[currentSeqIndex]) {\n            currentSeqIndex++;\n            waitingUserInput = false;\n            digitalWrite(GREEN_LED, LOW);\n            // Tüm diziler bitti\n            if (currentSeqIndex >= 3) {\n              lcd.clear();\n              lcd.print(\"Mod 1 bitti!\");\n              while (true); // Oyun bitti, dur\n            }\n            delay(800);\n          }\n        } else {\n          // Yanlış nota basıldı\n          digitalWrite(RED_LED, HIGH);\n          digitalWrite(GREEN_LED, LOW);\n          lcd.setCursor(0, 1);\n          lcd.print(\"Yanlis nota!\");\n          delay(1000);\n          lcd.setCursor(0, 1);\n          lcd.print(\"             \"); // Hata mesajını sil\n          digitalWrite(RED_LED, LOW);\n          waitingUserInput = false; // Yeniden başlatmak için bekle\n        }\n        break; // Bir buton okunduğunda diğerlerini bekleme\n      }\n    }\n  }\n}\n\n// ==================== MOD 2: GÖR ve ÇAL ====================\n// LCD'de nota isimleri gösterilir, kullanıcı sırasıyla bu notaları çalar\n\nint mod2SeqIndex = 0;     // Kaçıncı dizi oynatılıyor\nint mod2UserIndex = 0;    // Kullanıcıdan gelen nota indeksi\nbool mod2WaitingUser = false; // Kullanıcıdan giriş bekleniyor mu?\n\nvoid runMode2() {\n  // Henüz kullanıcıdan giriş beklenmiyorsa, diziyi ekrana yaz\n  if (!mod2WaitingUser) {\n    lcd.clear();\n    lcd.setCursor(0, 0);\n    lcd.print(\"Notalar:\");\n    lcd.setCursor(0, 1);\n\n    // Dizi LCD'ye yazılır\n    for (int i = 0; i < mod2Lengths[mod2SeqIndex]; i++) {\n      lcd.print(noteNames[mod2Sequences[mod2SeqIndex][i]]);\n      if (i < mod2Lengths[mod2SeqIndex] - 1) lcd.print(\" \");\n    }\n    delay(2000);\n    lcd.clear();\n    lcd.print(\"Cal:\");\n    mod2WaitingUser = true;\n    mod2UserIndex = 0;\n  }\n\n  // Kullanıcıdan nota bekleniyorsa\n  if (mod2WaitingUser) {\n    for (int i = 0; i < 7; i++) {\n      if (digitalRead(buttonPins[i]) == LOW) {\n        playNote(i);\n        delay(150);\n        if (i == mod2Sequences[mod2SeqIndex][mod2UserIndex]) {\n          digitalWrite(GREEN_LED, HIGH);\n          digitalWrite(RED_LED, LOW);\n          mod2UserIndex++;\n          // Dizi tamamlandıysa bir sonrakine geç\n          if (mod2UserIndex >= mod2Lengths[mod2SeqIndex]) {\n            mod2SeqIndex++;\n            mod2WaitingUser = false;\n            digitalWrite(GREEN_LED, LOW);\n            // Tüm diziler bitti\n            if (mod2SeqIndex >= 2) {\n              lcd.clear();\n              lcd.print(\"Mod 2 bitti!\");\n              while (true); // Bitir\n            }\n            delay(800);\n          }\n        } else {\n          // Yanlış nota basıldı\n          digitalWrite(RED_LED, HIGH);\n          digitalWrite(GREEN_LED, LOW);\n          lcd.setCursor(0, 1);\n          lcd.print(\"Yanlis nota!\");\n          delay(1000);\n          lcd.setCursor(0, 1);\n          lcd.print(\"             \"); // Hata mesajını sil\n          digitalWrite(RED_LED, LOW);\n          mod2WaitingUser = false;\n        }\n        break;\n      }\n    }\n  }\n}\n\n// ==================== MOD 3: ŞARKI ÇAL ====================\n// Önceden tanımlı iki şarkıdan birini seçtir, çal ve kullanıcıdan aynısını çalmasını iste\n\nbool mod3WaitingForUser = false; // Kullanıcıdan giriş bekleniyor mu?\nbool mod3SongSelected = false;   // Şarkı seçildi mi?\nint mod3UserIndex = 0;           // Kullanıcıdan gelen nota sırası\nint mod3WrongNotes[MAX_MEL_SIZE];// Kullanıcının yanlış bastığı notaların indexleri\nint mod3WrongCount = 0;          // Kaç hata yapıldı\n\n// Kullanıcıya şarkı seçtirir\nvoid selectSongForMode3() {\n  lcd.clear();\n  lcd.setCursor(0, 0);\n  lcd.print(\"Sarki seciniz:\");\n  lcd.setCursor(0, 1);\n  lcd.print(\"1 veya 2\");\n\n  // Kullanıcı şarkı seçene kadar bekle\n  while (!mod3SongSelected) {\n    if (digitalRead(buttonPins[0]) == LOW) {  // 1. şarkı\n      copySong(song1, song1Len);\n      mod3SongSelected = true;\n    }\n    if (digitalRead(buttonPins[1]) == LOW) {  // 2. şarkı\n      copySong(song2, song2Len);\n      mod3SongSelected = true;\n    }\n  }\n\n  lcd.clear();\n  lcd.print(\"Sarki secildi\");\n  delay(1000);\n  lcd.clear();\n  playSequence(selectedSong, selectedSongLen); // Seçilen şarkıyı çal\n  lcd.clear();\n  lcd.print(\"Cal:\");\n  mod3WaitingForUser = true; // Kullanıcıdan çalmasını bekle\n  mod3UserIndex = 0;\n  mod3WrongCount = 0;\n}\n\n// Şarkıyı seçilen diziye kopyalar\nvoid copySong(int *song, int len) {\n  selectedSongLen = len > MAX_MEL_SIZE ? MAX_MEL_SIZE : len;\n  for (int i = 0; i < selectedSongLen; i++) {\n    selectedSong[i] = song[i];\n  }\n}\n\nvoid runMode3() {\n  // Şarkı seçilmeden veya kullanıcıdan giriş beklenmiyorsa dön\n  if (!mod3WaitingForUser) {\n    return;\n  }\n\n  // Kullanıcıdan nota bekleniyor\n  for (int i = 0; i < 7; i++) {\n    if (digitalRead(buttonPins[i]) == LOW) {\n      playNote(i);\n      delay(150);\n\n      // Doğru nota mı kontrol et\n      if (i == selectedSong[mod3UserIndex]) {\n        digitalWrite(GREEN_LED, HIGH);\n        digitalWrite(RED_LED, LOW);\n      } else {\n        // Yanlış nota basıldıysa hata kaydet\n        digitalWrite(RED_LED, HIGH);\n        digitalWrite(GREEN_LED, LOW);\n        mod3WrongNotes[mod3WrongCount++] = mod3UserIndex;\n      }\n\n      mod3UserIndex++;\n\n      // Tüm notalar bitince sonucu göster\n      if (mod3UserIndex >= selectedSongLen) {\n        lcd.clear();\n        if (mod3WrongCount == 0) {\n          lcd.print(\"Tebrikler! Hata yok\");\n        } else {\n          lcd.print(\"Yanlis notalar:\");\n          delay(2000);\n          lcd.clear();\n          // Yanlış yapılan notaları sırayla yaz\n          for (int j = 0; j < mod3WrongCount; j++) {\n            lcd.print(noteNames[selectedSong[mod3WrongNotes[j]]]);\n            lcd.print(\" \");\n            delay(700);\n          }\n        }\n        while(true); // Bitir\n      }\n      delay(500);\n      digitalWrite(GREEN_LED, LOW);\n      digitalWrite(RED_LED, LOW);\n      break;\n    }\n  }\n}\n\n// ==================== SES ÇALMA FONKSİYONLARI ====================\n\n// Bir notayı çal (buzzer ile)\nvoid playNote(int noteIndex) {\n  if (noteIndex < 0 || noteIndex > 6) return;\n  tone(BUZZER_PIN, notesFreq[noteIndex], 300);\n}\n\n// Bir dizi notayı sırayla çal\nvoid playSequence(int *seq, int length) {\n  for (int i = 0; i < length; i++) {\n    playNote(seq[i]);\n    delay(500); // Nota süresi\n    noTone(BUZZER_PIN); // Buzzer'ı kapat\n    delay(150); // Notalar arası bekleme\n  }\n}"
    }
]